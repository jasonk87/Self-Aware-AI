[
  {
    "name": "performance_analyzer_tool",
    "module_path": "tools/performance_analyzer_tool.py",
    "description": "Analyzes AI performance data from goals, tools, and mission files, outputting a structured summary. Useful for self-reflection and identifying improvement areas.",
    "capabilities": [
      "performance_analysis",
      "data_summarization",
      "goal_evaluation_summary",
      "tool_statistics"
    ],
    "args_info": [
      {
        "name": "recent_goals",
        "type": "int",
        "required": false,
        "description": "Number of recent terminal goals to include in the detailed summary.",
        "default": 10
      },
      {
        "name": "output_format",
        "type": "str",
        "required": false,
        "description": "Format for the output summary ('json' or 'text'). JSON is preferred for programmatic use.",
        "default": "json"
      }
    ],
    "last_updated": "YYYY-MM-DDTHH:MM:SSZ",
    "last_run_time": null,
    "success_count": 0,
    "failure_count": 0,
    "total_runs": 0,
    "failure_details": []
  },
  {
    "name": "modify_the_script__tools_analyze_my_rece_9b6997",
    "module_path": "tools/modify_the_script__tools_analyze_my_rece_9b6997.py",
    "description": "Tool to help with: Modify the script `tools\\analyze_my_recent_performance_data__last_9b6997.py` to correct the invalid placeholder code generated by the ToolGenerationLLMError, related to thread ..9b6997.",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T00:49:32.297476Z",
    "last_run_time": "2025-05-18T00:48:54.656463+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "create_a_tool_to_search_the_internet__pa_a9140d",
    "module_path": "tools/create_a_tool_to_search_the_internet__pa_a9140d.py",
    "description": "Tool to help with: create a tool to search the internet, parse the results, and return them in a formatted manner using the duckducksearch module",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T01:04:39.152963Z",
    "last_run_time": "2025-05-18T01:04:02.472845+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "fix_tool__tools_test_the_search_function_3f8dc5",
    "module_path": "tools/fix_tool__tools_test_the_search_function_3f8dc5.py",
    "description": "Tool to help with: Fix tool `tools\\test_the_search_functionality_with_various_queries.py` for thread `..a9140d` due to potential rate limit issues during extensive querying \u2013 implement a dynamic query frequency adjustment based on API response times and error rates.",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T03:47:42.535705Z",
    "last_run_time": "2025-05-18T03:46:59.044613+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "_analyze_the__create_a_tool_to_search_th_1f8cc0",
    "module_path": "tools/_analyze_the__create_a_tool_to_search_th_1f8cc0.py",
    "description": "Tool to help with: \"Analyze the `create_a_tool_to_search_the_internet__pa_a9140d` tool\u2019s response parsing logic for potential rate limit triggers, specifically focusing on the handling of JSON responses from the DuckDuckGo search API. For thread pa_a9140d, implement a tiered parsing strategy with aggressive schema validation and retry mechanisms, prioritizing efficient data extraction to minimize API calls and potential rate limit violations. This will also include logging all parsing attempts and successes/failures for further analysis.\"",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T11:58:21.084460Z",
    "last_run_time": "2025-05-18T11:55:19.017632+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "identify_the_winners_of_the_eastern_and__1ea6e5",
    "module_path": "tools/identify_the_winners_of_the_eastern_and__1ea6e5.py",
    "description": "Tool to help with: Identify the winners of the Eastern and Western Conference playoffs",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T15:47:40.372478Z",
    "last_run_time": "2025-05-18T15:46:54.451050+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "confirm_the_two_teams_playing_in_the_202_1ea6e5",
    "module_path": "tools/confirm_the_two_teams_playing_in_the_202_1ea6e5.py",
    "description": "Tool to help with: Confirm the two teams playing in the 2023 NBA Finals",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T16:01:37.483800Z",
    "last_run_time": "2025-05-18T16:00:51.826786+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "verify_the_game_schedule_for_the_2023_nb_1ea6e5",
    "module_path": "tools/verify_the_game_schedule_for_the_2023_nb_1ea6e5.py",
    "description": "Tool to help with: Verify the game schedule for the 2023 NBA Finals",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T16:09:13.604696Z",
    "last_run_time": "2025-05-18T16:08:26.887337+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "summarize_the_results_of_each_game_in_th_1ea6e5",
    "module_path": "tools/summarize_the_results_of_each_game_in_th_1ea6e5.py",
    "description": "Tool to help with: Summarize the results of each game in the 2023 NBA Finals",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T16:13:51.812960Z",
    "last_run_time": "2025-05-18T16:13:03.203354+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  },
  {
    "name": "__d__python_python_exe_c__users_owner_de_bb46f8",
    "module_path": "tools/__d__python_python_exe_c__users_owner_de_bb46f8.py",
    "description": "Tool to help with: & D:/python/python.exe c:/Users/Owner/Desktop/Self-Aware/console_ai.py",
    "capabilities": [],
    "args_info": [],
    "last_updated": "2025-05-18T16:19:39.989969Z",
    "last_run_time": "2025-05-18T16:19:07.251985+00:00",
    "success_count": 1,
    "failure_count": 0,
    "total_runs": 1,
    "failure_details": []
  }
]